{"ast":null,"code":"var _jsxFileName = \"/workspaces/IngSoft/ing_soft_frontend/src/pages/SceneList.js\",\n  _s = $RefreshSig$();\n// src/SceneList.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SceneList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SceneList = () => {\n  _s();\n  const [scenes, setScenes] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Recupera tutte le scene dal server\n    fetch('http://localhost:5000/scenes').then(response => response.json()).then(data => setScenes(data)).catch(error => console.error('Error fetching scenes:', error));\n  }, []);\n  const handleLogout = () => {\n    // Logica di logout, se necessario\n    // Reindirizza alla schermata home\n    navigate('/');\n  };\n  const handleCreateScene = () => {\n    navigate('/Scene');\n  };\n  const handleEditClick = title => {\n    navigate(`/edit-scene/${title}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"scene-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"logout-button\",\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista delle Scene\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateScene,\n      className: \"create-scene-button\",\n      children: \"Crea Scena\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), scenes.map(scene => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scene-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: scene.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: scene.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEditClick(scene.title),\n        children: \"Modifica\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, scene._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(SceneList, \"sYsNtq/+1oAdtGtRA8Xs/pph4aY=\", false, function () {\n  return [useNavigate];\n});\n_c = SceneList;\nexport default SceneList;\nvar _c;\n$RefreshReg$(_c, \"SceneList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","SceneList","_s","scenes","setScenes","navigate","fetch","then","response","json","data","catch","error","console","handleLogout","handleCreateScene","handleEditClick","title","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","scene","description","_id","_c","$RefreshReg$"],"sources":["/workspaces/IngSoft/ing_soft_frontend/src/pages/SceneList.js"],"sourcesContent":["// src/SceneList.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SceneList.css';\n\nconst SceneList = () => {\n  const [scenes, setScenes] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    // Recupera tutte le scene dal server\n    fetch('http://localhost:5000/scenes')\n      .then(response => response.json())\n      .then(data => setScenes(data))\n      .catch(error => console.error('Error fetching scenes:', error));\n  }, []);\n\n  const handleLogout = () => {\n    // Logica di logout, se necessario\n    // Reindirizza alla schermata home\n    navigate('/');\n  };\n\n  const handleCreateScene = () => {\n    navigate('/Scene');\n  };\n\n  const handleEditClick = (title) => {\n    navigate(`/edit-scene/${title}`);\n  };\n\n  return (\n    <div className=\"scene-list-container\">\n      <header className=\"header\">\n        <button onClick={handleLogout} className=\"logout-button\">Logout</button>\n      </header>\n      <h1>Lista delle Scene</h1>\n      <button onClick={handleCreateScene} className=\"create-scene-button\">Crea Scena</button>\n      {scenes.map((scene) => (\n        <div key={scene._id} className=\"scene-item\">\n          <h2>{scene.title}</h2>\n          <p>{scene.description}</p>\n          <button onClick={() => handleEditClick(scene.title)}>Modifica</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SceneList;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMS,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAC,8BAA8B,CAAC,CAClCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,SAAS,CAACM,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB;IACA;IACAT,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EAED,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAC9BV,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMW,eAAe,GAAIC,KAAK,IAAK;IACjCZ,QAAQ,CAAC,eAAeY,KAAK,EAAE,CAAC;EAClC,CAAC;EAED,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCnB,OAAA;MAAQkB,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxBnB,OAAA;QAAQoB,OAAO,EAAEN,YAAa;QAACI,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CAAC,eACTxB,OAAA;MAAAmB,QAAA,EAAI;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxB,OAAA;MAAQoB,OAAO,EAAEL,iBAAkB;MAACG,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACtFrB,MAAM,CAACsB,GAAG,CAAEC,KAAK,iBAChB1B,OAAA;MAAqBkB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzCnB,OAAA;QAAAmB,QAAA,EAAKO,KAAK,CAACT;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBxB,OAAA;QAAAmB,QAAA,EAAIO,KAAK,CAACC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BxB,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAMJ,eAAe,CAACU,KAAK,CAACT,KAAK,CAAE;QAAAE,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAH9DE,KAAK,CAACE,GAAG;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAId,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CA1CID,SAAS;EAAA,QAEIH,WAAW;AAAA;AAAA+B,EAAA,GAFxB5B,SAAS;AA4Cf,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}